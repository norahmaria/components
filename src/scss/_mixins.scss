@use './variables' as *;
@use './keyframes';

@mixin one-pulse($color, $withBorder: false) {
  $animation-name: unique-id() !global;
  animation: $animation-name 0.5s $cubic;

  @keyframes #{$animation-name} {
    from {
      box-shadow: 0 0 0.5px 0 rgb($color, 0.6);

      @if ($withBorder) {
        border: 1px solid $color;
      }
    }

    to {
      box-shadow: 0 0 0.5px 4.5px transparent;

      @if ($withBorder) {
        border: 1px solid transparent;
      }
    }
  }
}

@mixin checkbox($selector) {
  #{$selector} {
    position: relative;
  }

  #{$selector} label {
    display: flex;
    gap: 0.55em;
    line-height: 1;

    & + &::before {
      cursor: pointer;
    }

    &.left,
    &.right {
      display: flex;
      align-items: center;

      &::after {
        content: none;
      }
    }

    &.left {
      flex-direction: row-reverse;
    }

    &.top,
    &.bottom {
      display: grid;
      justify-items: center;
    }

    &.top {
      &::before {
        content: none;
      }

      &::after {
        content: '';
      }
    }

    &.bottom {
      &::after {
        content: none;
      }
    }
  }

  #{$selector},
  #{$selector} label {
    width: max-content;
    cursor: pointer;
  }

  #{$selector} label::before,
  #{$selector} label::after {
    content: '';
    display: block;

    border: 1px solid darken($neutral700, 10%);
    border-radius: $br;

    box-shadow: 0 0 0.5px 0 rgb($neutral700, 0.6);

    transition: border 0.25s $cubic, background 0.25s $cubic,
      box-shadow 0.25s $cubic, outline-width 0.25s $cubic;
  }

  #{$selector} label {
    svg {
      position: absolute;

      border: 0;
      padding: 0.2rem;
      z-index: 5;

      transition: opacity 0.25s $cubic;
      opacity: 0;

      path {
        fill: $white;
        stroke: $white;
        stroke-width: 2px;
        stroke-linejoin: round;
      }
    }
  }

  #{$selector} input:checked + label svg {
    opacity: 1;
  }

  #{$selector}.small {
    label::before,
    label::after {
      height: 1rem;
      width: 1rem;
    }

    label {
      font-size: 0.875rem;

      svg {
        height: 0.85rem;
        width: 0.85rem;
      }

      &.right,
      &.left {
        top: 0.075rem;
      }

      &.right svg {
        left: 0.075rem;
      }

      &.left svg {
        right: 0.075rem;
      }

      &.top svg {
        bottom: 0.075rem;
      }

      &.bottom svg {
        top: 0.075rem;
      }
    }
  }

  #{$selector}.medium {
    label::before,
    label::after {
      height: 1.1rem;
      width: 1.1rem;
    }

    label {
      font-size: 1rem;

      svg {
        height: 0.9rem;
        width: 0.9rem;
      }

      &.right svg,
      &.left svg,
      &.bottom svg {
        top: 0.115rem;
      }

      &.right svg {
        left: 0.1rem;
      }

      &.left svg {
        right: 0.1rem;
      }

      &.top svg {
        bottom: 0.075rem;
      }
    }
  }

  #{$selector}.large {
    label::before,
    label::after {
      height: 1.25rem;
      width: 1.25rem;
    }

    label {
      font-size: 1.15rem;

      svg {
        height: 1rem;
        width: 1rem;
      }

      &.right svg,
      &.left svg,
      &.bottom svg {
        top: 0.115rem;
      }

      &.right svg {
        left: 0.125rem;
        top: 0.135rem;
      }

      &.left svg {
        right: 0.1rem;
      }

      &.top svg {
        bottom: 0.115rem;
      }
    }
  }

  @each $name, $color in $colors {
    #{$selector}.#{$name} {
      @if $name == 'neutral' {
        input:checked + label::before,
        input:checked + label::after {
          border: 1px solid scale-color($color, $lightness: 5%);
          background: scale-color($color, $lightness: 15%);
        }

        input:focus-visible + label::before,
        input:active + label::before,
        input:hover + label::before,
        input:focus-visible + label::after,
        input:active + label::after,
        input:hover + label::after {
          border: 1px solid scale-color($color, $lightness: -50%);

          box-shadow: 0
            0
            0.5px
            2.5px
            rgba(scale-color($color, $lightness: -50%), 0.4);
        }

        label svg path {
          fill: $black;
          stroke: $black;
        }
      } @else {
        input:checked + label::before,
        input:checked + label::after {
          background-color: $color;
          border: 1px solid $color;
        }

        input:focus-visible + label::before,
        input:active + label::before,
        input:hover + label::before,
        input:focus-visible + label::after,
        input:active + label::after,
        input:hover + label::after {
          border: 1px solid $color;
          box-shadow: 0 0 0.5px 2.5px rgba($color, 0.4);
        }
      }
    }
  }

  #{$selector} input {
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;

    &:disabled {
      cursor: not-allowed;

      & + label {
        cursor: not-allowed;
      }
    }
  }

  @each $name, $color in $colors {
    #{$selector}.#{$name} {
      & input:disabled {
        & + label::before,
        & + label::after {
          background: darken($white, 5%);
          border: 1px solid #d9d9d9;
          color: #898a8a;
          cursor: not-allowed;
        }

        & + label {
          color: #aeaeae;
        }

        & + label svg {
          path {
            fill: #898a8a;
            stroke: #898a8a;
          }
        }

        &:focus-visible + label::before,
        &:active + label::before,
        &:hover + label::before,
        &:focus-visible + label::after,
        &:active + label::after,
        &:hover + label::after {
          border: 1px solid #d9d9d9;
          box-shadow: 0 0 0.5px 0 rgb($white, 0.6);
        }
      }
    }
  }
}
